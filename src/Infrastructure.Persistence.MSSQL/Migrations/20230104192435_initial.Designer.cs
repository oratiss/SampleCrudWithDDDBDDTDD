// <auto-generated />
using System;
using Infrastructure.Persistence.MSSQL.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Persistence.MSSQL.Migrations
{
    [DbContext(typeof(SampleDbContext))]
    [Migration("20230104192435_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Infrastructure.Persistence.MSSQL.Models.BankAccount", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<DateTimeOffset>("CreateDateTime")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<DateTimeOffset?>("UpdateDateTime")
                        .HasColumnType("datetimeoffset(7)");

                    b.HasKey("Id");

                    b.ToTable("BankAccount", "Financial");
                });

            modelBuilder.Entity("Infrastructure.Persistence.MSSQL.Models.Customer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTimeOffset>("DateOfBirth")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.HasKey("Id");

                    b.ToTable("Customer", "Customer");
                });

            modelBuilder.Entity("Infrastructure.Persistence.MSSQL.Models.BankAccount", b =>
                {
                    b.OwnsOne("Infrastructure.Persistence.MSSQL.Models.CustomerVoForBankAccount", "CustomerVoForBankAccount", b1 =>
                        {
                            b1.Property<long>("BankAccountId")
                                .HasColumnType("bigint")
                                .HasColumnName("BankAccountId");

                            b1.Property<DateTimeOffset>("DateOfBirth")
                                .HasColumnType("datetimeoffset(7)");

                            b1.Property<string>("FullName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("BankAccountId");

                            b1.ToTable("CustomerVoForBankAccount", "Financial");

                            b1.WithOwner("BankAccount")
                                .HasForeignKey("BankAccountId");

                            b1.Navigation("BankAccount");
                        });

                    b.Navigation("CustomerVoForBankAccount")
                        .IsRequired();
                });

            modelBuilder.Entity("Infrastructure.Persistence.MSSQL.Models.Customer", b =>
                {
                    b.OwnsOne("Infrastructure.Persistence.MSSQL.Events.CustomerCreatedEvent", "CustomerCreatedEvent", b1 =>
                        {
                            b1.Property<long>("CustomerId")
                                .HasColumnType("bigint")
                                .HasColumnName("CustomerId");

                            b1.Property<string>("BankAccountNumber")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("varchar(10)");

                            b1.Property<DateTimeOffset>("DateTime")
                                .HasColumnType("datetimeoffset(7)");

                            b1.Property<bool?>("IsCallbackCompleted")
                                .HasColumnType("bit");

                            b1.Property<bool?>("IsPublished")
                                .HasColumnType("bit");

                            b1.HasKey("CustomerId");

                            b1.ToTable("CustomerCreatedEvent", "Customer");

                            b1.WithOwner("Customer")
                                .HasForeignKey("CustomerId");

                            b1.Navigation("Customer");
                        });

                    b.OwnsOne("Infrastructure.Persistence.MSSQL.Models.BankAccountVoForCustomer", "BankAccount", b1 =>
                        {
                            b1.Property<long>("CustomerId")
                                .HasColumnType("bigint")
                                .HasColumnName("CustomerId");

                            b1.Property<string>("Number")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("varchar(10)");

                            b1.HasKey("CustomerId");

                            b1.ToTable("BankAccountVoForCustomer", "Customer");

                            b1.WithOwner("Customer")
                                .HasForeignKey("CustomerId");

                            b1.Navigation("Customer");
                        });

                    b.Navigation("BankAccount")
                        .IsRequired();

                    b.Navigation("CustomerCreatedEvent");
                });
#pragma warning restore 612, 618
        }
    }
}
